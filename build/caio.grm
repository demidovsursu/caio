%locations
%define parse.error verbose
%define api.pure full
%param { void *scanner }
%no-lines
%{
#include "caio.h"

#define YYLLOC_DEFAULT(Current, Rhs, N)                        \
    do {                                                       \
      if (N)                                                   \
        {                                                      \
          (Current).first   = YYRHSLOC (Rhs, 1).first;         \
          (Current).last  = YYRHSLOC (Rhs, N).last;            \
        }                                                      \
      else                                                     \
        {                                                      \
          (Current).first = (Current).last = YYRHSLOC (Rhs, 0).last; \
        }                                                      \
      yyclear_attr(yyval);                                     \
    } while (0)
%}
%token T_1001 1001 "%code"
%token T_1002 1002 "%operator"
%token T_1003 1003 "%option"
%token T_1004 1004 "%type"
%token T_1005 1005 "%using"
%token T_1006 1006 "%{"
%token T_1007 1007 "default"
%token T_1008 1008 "match"
%token T_1009 1009 "rule"
%token T_1010 1010 "visit"
%token T_1011 1011 "visitor"
%token T_1012 1012 "?%%code?"
%token T_1013 1013 "?%%grm?"
%token T_1014 1014 "?%%lex?"
%token <f1_> T_1015 1015 "?const?"
%token <f1_> T_1016 1016 "?id?"
%token <f1_> T_1017 1017 "?lexem?"
%token <f1_> T_1018 1018 "?number?"
%token <f1_> T_1019 1019 "?re?"
%token <f1_> T_1020 1020 "?ref?"
%token <f1_> T_1021 1021 "?spaces?"
%token <f1_> T_1022 1022 "?terminal?"
%type <f1_> alist
%type <f2_> decl
%type <f3_> elem
%type <f4_> erule
%type <f2_> g_1
%type <f5_> g_10
%type <f6_> g_11
%type <f7_> g_12
%type <f8_> g_13
%type <f1_> g_14
%type <f9_> g_15
%type <f1_> g_16
%type <f9_> g_17
%type <f1_> g_18
%type <f9_> g_19
%type <f10_> g_2
%type <f1_> g_20
%type <f9_> g_21
%type <f9_> g_22
%type <f9_> g_23
%type <f1_> g_24
%type <f9_> g_25
%type <f9_> g_26
%type <f1_> g_27
%type <f9_> g_28
%type <f9_> g_29
%type <f2_> g_3
%type <f9_> g_30
%type <f1_> g_31
%type <f9_> g_32
%type <f11_> g_33
%type <f12_> g_34
%type <f4_> g_35
%type <f13_> g_36
%type <f14_> g_38
%type <f3_> g_39
%type <f15_> g_4
%type <f16_> g_40
%type <f6_> g_41
%type <f16_> g_42
%type <f6_> g_43
%type <f16_> g_44
%type <f17_> g_47
%type <f18_> g_48
%type <f18_> g_49
%type <f19_> g_5
%type <f17_> g_50
%type <f20_> g_51
%type <f21_> g_52
%type <f9_> g_53
%type <f9_> g_54
%type <f9_> g_55
%type <f9_> g_56
%type <f1_> g_57
%type <f9_> g_58
%type <f15_> g_6
%type <f19_> g_7
%type <f5_> g_8
%type <f22_> g_9
%type <f22_> grule
%type <f23_> lcode
%type <f9_> lelem
%type <f9_> list
%type <f15_> lrule
%type <f18_> mrule
%type <f6_> ncode
%type <f24_> node
%type <f25_> program
%type <f26_> rcode
%type <f8_> symbol
%type <f12_> term
%type <f1_> type1
%type <f1_> type2
%type <f21_> vrule
%type <f6_> xcode
%type <f16_> xelem
%type <f13_> xrule
%destructor { if(yydebug_flag==2) ast::astprint(cout,$$); else YYINTERPRET($$,scanner); ast::destroy($$); } program
%destructor { ast::destroy($$); } <f16_>
%destructor { ast::destroy($$); } <f2_>
%destructor { ast::destroy($$); } <f26_>
%destructor { ast::destroy($$); } <f3_>
%destructor { ast::destroy($$); } <f22_>
%destructor { ast::destroy($$); } <f23_>
%destructor { ast::destroy($$); } <f6_>
%destructor { ast::destroy($$); } <f10_>
%destructor { ast::destroy($$); } <f14_>
%destructor { ast::destroy($$); } <f5_>
%destructor { ast::destroy($$); } <f19_>
%destructor { ast::destroy($$); } <f17_>
%destructor { ast::destroy($$); } <f7_>
%destructor { ast::destroy($$); } <f20_>
%destructor { ast::destroy($$); } <f4_>
%destructor { ast::destroy($$); } <f9_>
%destructor { ast::destroy($$); } <f15_>
%destructor { ast::destroy($$); } <f18_>
%destructor { ast::destroy($$); } <f24_>
%destructor { ast::destroy($$); } <f8_>
%destructor { ast::destroy($$); } <f12_>
%destructor { ast::destroy($$); } <f21_>
%destructor { ast::destroy($$); } <f13_>
%destructor { ast::destroy($$); } <f1_>
%destructor { ast::destroy($$); } <f11_>
%%
program	: g_2 g_7 g_10 g_11	{
	#line 203 "caio.caio"
                                      $$=ast::prog($1,$2,$3,$4,&@$); }
	;
decl	: T_1004  '<' type1 '>' g_12	{
	#line 205 "caio.caio"
                                             $$=ast::decltypes($3,$5,&@$); }
	| T_1003  g_15	{
	#line 207 "caio.caio"
                                                 for(auto o:$2) switch_option(o);  }
	| T_1005  g_17	{
	#line 208 "caio.caio"
                                                 for(auto o:$2) add_using(o);  }
	| T_1002  g_21	{
	#line 211 "caio.caio"
                                             $$=ast::decloper($2,&@$); }
	| T_1016  T_1019 	{
	#line 212 "caio.caio"
                                             $$=ast::declre($1,$2,&@$); }
	| T_1006  xcode '}'	{
	#line 213 "caio.caio"
                                             $$=ast::declcode(nullptr,$2,&@$); }
	| T_1001  T_1016  T_1006  xcode '}'	{
	#line 214 "caio.caio"
                                             $$=ast::declcode($2,$4,&@$); }
	;
type1	: type2	{$$=$1; }
	| type2 '?'	{
	#line 217 "caio.caio"
                                             $$=std::string($1+"?"s); }
	| type2 '<' type2 '>'	{
	#line 218 "caio.caio"
                                             $$=std::string($1+"<"s+$3+">"s); }
	| type2 '*'	{
	#line 219 "caio.caio"
                                             $$=std::string($1+"*"s); }
	| type2 '<' type2 '>' '*'	{
	#line 220 "caio.caio"
                                             $$=std::string($1+"<"s+$3+">*"s); }
	;
type2	: T_1016 	{
	#line 222 "caio.caio"
                                             $$=std::string(($1=="string"s)?"std::string"s:$1); }
	| T_1016  ':' ':' T_1016 	{
	#line 223 "caio.caio"
                                             $$=std::string($1+"::"s+$4); }
	;
symbol	: T_1022 	{
	#line 225 "caio.caio"
                                             $$=ast::terminal($1,&@$); }
	| T_1016 	{
	#line 226 "caio.caio"
                                             $$=ast::ident($1,&@$); }
	| T_1016  '(' g_25 ')'	{
	#line 228 "caio.caio"
                                             $$=ast::node($1,$3,&@$); }
	;
lrule	: g_29 T_1019  lcode	{
	#line 234 "caio.caio"
                                             $$=ast::lexrule($1,$2,$3,&@$); }
	;
term	: type2 '(' g_32 ')'	{
	#line 237 "caio.caio"
                                             $$=ast::tnode($1,$3,&@$); }
	| T_1015 	{
	#line 238 "caio.caio"
                                             $$=ast::snode($1,&@$); }
	| type2	{
	#line 239 "caio.caio"
                                             $$=ast::snode($1,&@$); }
	| T_1020 	{
	#line 240 "caio.caio"
                                             $$=ast::snode($1,&@$); }
	;
lcode	: g_33 g_34	{
	#line 242 "caio.caio"
                                             $$=ast::lterm($1,$2,&@$); }
	| ';'	{
	#line 243 "caio.caio"
                                             $$=ast::lskip(&@$); }
	| '|'	{
	#line 244 "caio.caio"
                                             $$=ast::lnext(&@$); }
	| T_1006  xcode '}'	{
	#line 245 "caio.caio"
                                             $$=ast::lcode($2,&@$); }
	;
alist	: lelem	{
	#line 247 "caio.caio"
                                                 string s; for(auto x:$1) s+=x; $$=s;  }
	| alist lelem	{
	#line 248 "caio.caio"
                                                 string s; for(auto x:$2) s+=x; $$=$1+s;  }
	;
grule	: T_1016  '=' erule	{
	#line 251 "caio.caio"
                                             $$=ast::grmrule($1,$3,&@$); }
	;
erule	: xrule g_35	{
	#line 253 "caio.caio"
                                             $$=ast::cons($1,$2); }
	;
xrule	: g_38 rcode	{
	#line 255 "caio.caio"
                                             $$=ast::xrule($1,$2,&@$); }
	;
rcode	:	{
	#line 257 "caio.caio"
                                             $$=ast::gempty(&@$); }
	| '<' term '>'	{
	#line 258 "caio.caio"
                                             $$=ast::gterm($2,&@$); }
	| T_1006  xcode '}'	{
	#line 259 "caio.caio"
                                             $$=ast::gcode($2,&@$); }
	;
elem	: T_1022 	{
	#line 261 "caio.caio"
                                             $$=ast::trmelem($1,&@$); }
	| T_1016 	{
	#line 262 "caio.caio"
                                             $$=ast::symelem($1,&@$); }
	| '(' erule ')'	{
	#line 263 "caio.caio"
                                             $$=ast::varelem($2,&@$); }
	| '(' erule ')' '*'	{
	#line 264 "caio.caio"
                                             $$=ast::repelem0($2,&@$); }
	| '{' erule '}'	{
	#line 265 "caio.caio"
                                             $$=ast::repelem0($2,&@$); }
	| '(' erule ')' '+'	{
	#line 266 "caio.caio"
                                             $$=ast::repelem1($2,&@$); }
	| '{' erule '}' '-'	{
	#line 267 "caio.caio"
                                             $$=ast::repelem1($2,&@$); }
	| '(' erule ')' '?'	{
	#line 268 "caio.caio"
                                             $$=ast::optelem($2,&@$); }
	| '[' erule ']'	{
	#line 269 "caio.caio"
                                             $$=ast::optelem($2,&@$); }
	;
xcode	: g_41	{$$=$1; }
	;
ncode	: g_43	{$$=$1; }
	;
xelem	: T_1017 	{
	#line 277 "caio.caio"
                                             $$=ast::lexem($1,&@$); }
	| T_1015 	{
	#line 278 "caio.caio"
                                             $$=ast::lexem($1,&@$); }
	| T_1016 	{
	#line 279 "caio.caio"
                                             $$=ast::lexem($1,&@$); }
	| ':'	{
	#line 280 "caio.caio"
                                             $$=ast::lexem(":"s,&@$); }
	| T_1020 	{
	#line 281 "caio.caio"
                                             $$=ast::lexem($1,&@$); }
	| T_1021 	{
	#line 282 "caio.caio"
                                             $$=ast::lexem($1,&@$); }
	| '{' xcode '}'	{
	#line 283 "caio.caio"
                                             $$=ast::pcode($2,&@$); }
	| T_1008  list '{' g_45 g_50 '}'	{
	#line 290 "caio.caio"
                                             $$=ast::mcode($2,$5,&@$); }
	| T_1011  T_1016  '<' T_1016  ',' T_1016  '>' '{' xcode g_51 '}'	{
	#line 294 "caio.caio"
                                             $$=ast::vcode($2,$4,$6,$9,$10,&@$); }
	| T_1022 	{
	#line 295 "caio.caio"
                                             $$=ast::token($1,&@$); }
	;
mrule	: T_1009  node ':' ncode	{
	#line 297 "caio.caio"
                                             $$=ast::mrule($2,$4,&@$); }
	;
vrule	: T_1010  node ':' ncode	{
	#line 299 "caio.caio"
                                             $$=ast::vrule($2,$4,&@$); }
	;
list	: lelem g_54	{
	#line 302 "caio.caio"
                                             $$=ast::cons($1,$2); }
	;
lelem	: T_1017 	{
	#line 304 "caio.caio"
                                             $$=ast::cons($1); }
	| T_1020 	{
	#line 305 "caio.caio"
                                             $$=ast::cons($1); }
	| T_1016 	{
	#line 306 "caio.caio"
                                             $$=ast::cons($1); }
	| T_1015 	{
	#line 307 "caio.caio"
                                             $$=ast::cons($1); }
	| '(' list ')'	{
	#line 308 "caio.caio"
                                             $$=ast::cons(cons("("s,$2),")"s); }
	;
node	: T_1016  '(' g_58 ')'	{
	#line 311 "caio.caio"
                                             $$=ast::node2($1,$3,&@$); }
	| T_1016 	{
	#line 312 "caio.caio"
                                             $$=ast::node1($1,&@$); }
	;
g_1	:
	| decl	{$$=$1; }
	;
g_3	: g_1 '\n'	{$$=$1; }
	;
g_2	:
	| g_2 g_3	{$$=ast::cons($1,$2); }
	;
g_4	:
	| lrule	{$$=$1; }
	;
g_6	: g_4 '\n'	{$$=$1; }
	;
g_5	:
	| g_5 g_6	{$$=ast::cons($1,$2); }
	;
g_7	:
	| T_1014  g_5	{$$=$2; }
	;
g_9	: grule ';'	{$$=$1; }
	;
g_8	:
	| g_8 g_9	{$$=ast::cons($1,$2); }
	;
g_10	:
	| T_1013  g_8	{$$=$2; }
	;
g_11	:
	| T_1012  xcode	{$$=$2; }
	;
g_13	: symbol	{$$=$1; }
	;
g_12	:
	| g_12 g_13	{$$=ast::cons($1,$2); }
	;
g_14	: T_1016  '(' T_1018  ')'	{
	#line 206 "caio.caio"
                                             $$=std::string($1+$3); }
	| T_1016 	{$$=$1; }
	;
g_16	: g_14	{$$=$1; }
	;
g_15	: g_16	{$$=ast::cons($1); }
	| g_15 g_16	{$$=ast::cons($1,$2); }
	;
g_18	: T_1016 	{$$=$1; }
	;
g_17	: g_18	{$$=ast::cons($1); }
	| g_17 g_18	{$$=ast::cons($1,$2); }
	;
g_20	: T_1022 	{$$=$1; }
	;
g_19	: g_20	{$$=ast::cons($1); }
	| g_19 g_20	{$$=ast::cons($1,$2); }
	;
g_22	: '<' T_1016  '>' g_19	{
	#line 210 "caio.caio"
                                             $$=ast::cons($2,$4); }
	;
g_21	: g_22	{$$=ast::cons($1); }
	| g_21 g_22	{$$=ast::cons($1,$2); }
	;
g_24	: ',' type1	{$$=$2; }
	;
g_23	:
	| g_23 g_24	{$$=ast::cons($1,$2); }
	;
g_25	:
	| type1 g_23	{
	#line 227 "caio.caio"
                                             $$=ast::cons($1,$2); }
	;
g_27	: ',' T_1016 	{$$=$2; }
	;
g_26	:
	| g_26 g_27	{$$=ast::cons($1,$2); }
	;
g_28	: '*'	{
	#line 230 "caio.caio"
                                             $$=ast::cons("*"s); }
	| T_1016  g_26	{
	#line 231 "caio.caio"
                                             $$=ast::cons($1,$2); }
	;
g_29	:
	| '<' g_28 '>'	{$$=$2; }
	;
g_31	: ',' alist	{$$=$2; }
	;
g_30	:
	| g_30 g_31	{$$=ast::cons($1,$2); }
	;
g_32	:
	| alist g_30	{
	#line 236 "caio.caio"
                                             $$=ast::cons($1,$2); }
	;
g_33	:
	| T_1022 	{$$=$1; }
	;
g_34	:
	| '<' term '>'	{$$=$2; }
	;
g_36	: '|' xrule	{$$=$2; }
	;
g_35	:
	| g_35 g_36	{$$=ast::cons($1,$2); }
	;
g_37	:
	| ','
	;
g_39	: elem g_37	{$$=$1; }
	;
g_38	:
	| g_38 g_39	{$$=ast::cons($1,$2); }
	;
g_40	: xelem	{$$=$1; }
	| T_1007 	{
	#line 272 "caio.caio"
                                             $$=ast::lexem("default"s,&@$); }
	;
g_42	: g_40	{$$=$1; }
	;
g_41	:
	| g_41 g_42	{$$=ast::cons($1,$2); }
	;
g_44	: xelem	{$$=$1; }
	;
g_43	:
	| g_43 g_44	{$$=ast::cons($1,$2); }
	;
g_46	: T_1021 
	;
g_45	:
	| g_45 g_46
	;
g_48	: mrule	{$$=$1; }
	;
g_47	: g_48	{$$=ast::cons($1); }
	| g_47 g_48	{$$=ast::cons($1,$2); }
	;
g_49	:
	| T_1007  ':' ncode	{
	#line 287 "caio.caio"
                                             $$=ast::mrule(nullptr,$3,&@$); }
	;
g_50	: g_47 g_49	{
	#line 288 "caio.caio"
                                             $$=ast::cons($1,$2); }
	;
g_52	: vrule	{$$=$1; }
	;
g_51	: g_52	{$$=ast::cons($1); }
	| g_51 g_52	{$$=ast::cons($1,$2); }
	;
g_53	: lelem	{$$=$1; }
	| ','	{
	#line 301 "caio.caio"
                                             $$=ast::cons(","s); }
	;
g_55	: g_53	{$$=$1; }
	;
g_54	:
	| g_54 g_55	{$$=ast::cons($1,$2); }
	;
g_57	: ',' T_1016 	{$$=$2; }
	;
g_56	:
	| g_56 g_57	{$$=ast::cons($1,$2); }
	;
g_58	:
	| T_1016  g_56	{
	#line 310 "caio.caio"
                                             $$=ast::cons($1,$2); }
	;
%%
