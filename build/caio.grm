%define parse.error verbose
%locations
%define api.pure full
%{
#include "caio.h"
%}
%token T_1001 1001 "%code"
%token T_1002 1002 "%operator"
%token T_1003 1003 "%option"
%token T_1004 1004 "%type"
%token T_1005 1005 "%{"
%token T_1006 1006 "default"
%token T_1007 1007 "match"
%token T_1008 1008 "rule"
%token T_1009 1009 "visit"
%token T_1010 1010 "visitor"
%token T_1011 1011 "?%%code?"
%token T_1012 1012 "?%%grm?"
%token T_1013 1013 "?%%lex?"
%token <f1_> T_1014 1014 "?const?"
%token <f1_> T_1015 1015 "?id?"
%token <f1_> T_1016 1016 "?lexem?"
%token <f1_> T_1017 1017 "?number?"
%token <f1_> T_1018 1018 "?re?"
%token <f1_> T_1019 1019 "?ref?"
%token <f1_> T_1020 1020 "?spaces?"
%token <f1_> T_1021 1021 "?terminal?"
%type <f1_> alist
%type <f2_> decl
%type <f3_> elem
%type <f4_> erule
%type <f2_> g_1
%type <f5_> g_10
%type <f6_> g_11
%type <f7_> g_12
%type <f8_> g_13
%type <f1_> g_14
%type <f9_> g_15
%type <f1_> g_16
%type <f9_> g_17
%type <f1_> g_18
%type <f9_> g_19
%type <f10_> g_2
%type <f9_> g_20
%type <f9_> g_21
%type <f1_> g_22
%type <f9_> g_23
%type <f9_> g_24
%type <f1_> g_25
%type <f9_> g_26
%type <f9_> g_27
%type <f9_> g_28
%type <f1_> g_29
%type <f2_> g_3
%type <f9_> g_30
%type <f11_> g_31
%type <f12_> g_32
%type <f4_> g_33
%type <f13_> g_34
%type <f14_> g_35
%type <f3_> g_36
%type <f15_> g_37
%type <f6_> g_38
%type <f15_> g_39
%type <f16_> g_4
%type <f6_> g_40
%type <f15_> g_41
%type <f17_> g_44
%type <f18_> g_45
%type <f18_> g_46
%type <f17_> g_47
%type <f19_> g_48
%type <f20_> g_49
%type <f21_> g_5
%type <f9_> g_50
%type <f9_> g_51
%type <f9_> g_52
%type <f9_> g_53
%type <f1_> g_54
%type <f9_> g_55
%type <f16_> g_6
%type <f21_> g_7
%type <f5_> g_8
%type <f22_> g_9
%type <f22_> grule
%type <f23_> lcode
%type <f9_> lelem
%type <f9_> list
%type <f16_> lrule
%type <f18_> mrule
%type <f6_> ncode
%type <f24_> node
%type <f25_> program
%type <f26_> rcode
%type <f8_> symbol
%type <f12_> term
%type <f1_> type1
%type <f1_> type2
%type <f20_> vrule
%type <f6_> xcode
%type <f15_> xelem
%type <f13_> xrule
%%
program	: g_2 g_7 g_10 g_11	{ clear_attr(yyval);  set_yyloc(yyloc);  
                                         yyastroot=$$=prog($1,$2,$3,$4); 
                                         if(!yydebug_flag || yydebug_flag>2)
                                         { get_args(); 
                                           generate(filename,filepath,yyastroot=$$); 
                                         }
                                        }
	;
decl	: T_1004  '<' type1 '>' g_12	{  set_yyloc(yyloc); $$=ast::decltypes($3,$5); }
	| T_1003  g_15	{ clear_attr(yyval);  set_yyloc(yyloc);  for(auto o:$2) switch_option(o);  }
	| T_1002  g_19	{  set_yyloc(yyloc); $$=ast::decloper($2); }
	| T_1015  T_1018 	{  set_yyloc(yyloc); $$=ast::declre($1,$2); }
	| T_1005  xcode '}'	{  set_yyloc(yyloc); $$=ast::declcode(nullptr,$2); }
	| T_1001  T_1015  T_1005  xcode '}'	{  set_yyloc(yyloc); $$=ast::declcode($2,$4); }
	;
type1	: type2	{  set_yyloc(yyloc); $$=$1; }
	| type2 '?'	{  set_yyloc(yyloc); $$=std::string($1+"?"s); }
	| type2 '<' type2 '>'	{  set_yyloc(yyloc); $$=std::string($1+"<"s+$3+">"s); }
	| type2 '*'	{  set_yyloc(yyloc); $$=std::string($1+"*"s); }
	| type2 '<' type2 '>' '*'	{  set_yyloc(yyloc); $$=std::string($1+"<"s+$3+">*"s); }
	;
type2	: T_1015 	{  set_yyloc(yyloc); $$=std::string(($1=="string"s)?"std::string"s:$1); }
	| T_1015  ':' ':' T_1015 	{  set_yyloc(yyloc); $$=std::string($1+"::"s+$4); }
	;
symbol	: T_1021 	{  set_yyloc(yyloc); $$=ast::terminal($1); }
	| T_1015 	{  set_yyloc(yyloc); $$=ast::ident($1); }
	| T_1015  '(' g_23 ')'	{  set_yyloc(yyloc); $$=ast::node($1,$3); }
	;
lrule	: g_27 T_1018  lcode	{  set_yyloc(yyloc); $$=ast::lexrule($1,$2,$3); }
	;
term	: type2 '(' g_30 ')'	{  set_yyloc(yyloc); $$=ast::tnode($1,$3); }
	| T_1014 	{  set_yyloc(yyloc); $$=ast::snode($1); }
	| type2	{  set_yyloc(yyloc); $$=ast::snode($1); }
	| T_1019 	{  set_yyloc(yyloc); $$=ast::snode($1); }
	;
lcode	: g_31 g_32	{  set_yyloc(yyloc); $$=ast::lterm($1,$2); }
	| ';'	{  set_yyloc(yyloc); $$=ast::lskip(); }
	| '|'	{  set_yyloc(yyloc); $$=ast::lnext(); }
	| T_1005  xcode '}'	{  set_yyloc(yyloc); $$=ast::lcode($2); }
	;
alist	: lelem	{ clear_attr(yyval);  set_yyloc(yyloc);  string s; for(auto x:$1) s+=x; $$=s;  }
	| alist lelem	{ clear_attr(yyval);  set_yyloc(yyloc);  string s; for(auto x:$2) s+=x; $$=$1+s;  }
	;
grule	: T_1015  '=' erule	{  set_yyloc(yyloc); $$=ast::grmrule($1,$3); }
	;
erule	: xrule g_33	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
xrule	: g_35 rcode	{  set_yyloc(yyloc); $$=ast::xrule($1,$2); }
	;
rcode	:	{  set_yyloc(yyloc); $$=ast::gempty(); }
	| '<' term '>'	{  set_yyloc(yyloc); $$=ast::gterm($2); }
	| T_1005  xcode '}'	{  set_yyloc(yyloc); $$=ast::gcode($2); }
	;
elem	: T_1021 	{  set_yyloc(yyloc); $$=ast::trmelem($1); }
	| T_1015 	{  set_yyloc(yyloc); $$=ast::symelem($1); }
	| '(' erule ')'	{  set_yyloc(yyloc); $$=ast::varelem($2); }
	| '(' erule ')' '*'	{  set_yyloc(yyloc); $$=ast::repelem0($2); }
	| '{' erule '}'	{  set_yyloc(yyloc); $$=ast::repelem0($2); }
	| '(' erule ')' '+'	{  set_yyloc(yyloc); $$=ast::repelem1($2); }
	| '{' erule '}' '-'	{  set_yyloc(yyloc); $$=ast::repelem1($2); }
	| '(' erule ')' '?'	{  set_yyloc(yyloc); $$=ast::optelem($2); }
	| '[' erule ']'	{  set_yyloc(yyloc); $$=ast::optelem($2); }
	;
xcode	: g_38	{  set_yyloc(yyloc); $$=$1; }
	;
ncode	: g_40	{  set_yyloc(yyloc); $$=$1; }
	;
xelem	: T_1016 	{  set_yyloc(yyloc); $$=ast::lexem($1); }
	| T_1014 	{  set_yyloc(yyloc); $$=ast::lexem($1); }
	| T_1015 	{  set_yyloc(yyloc); $$=ast::lexem($1); }
	| ':'	{  set_yyloc(yyloc); $$=ast::lexem(":"s); }
	| T_1019 	{  set_yyloc(yyloc); $$=ast::lexem($1); }
	| T_1020 	{  set_yyloc(yyloc); $$=ast::lexem($1); }
	| '{' xcode '}'	{  set_yyloc(yyloc); $$=ast::pcode($2); }
	| T_1007  list '{' g_42 g_47 '}'	{  set_yyloc(yyloc); $$=ast::mcode($2,$5); }
	| T_1010  T_1015  '<' T_1015  ',' T_1015  '>' '{' xcode g_48 '}'	{  set_yyloc(yyloc); $$=ast::vcode($2,$4,$6,$9,$10); }
	| T_1021 	{  set_yyloc(yyloc); $$=ast::token($1); }
	;
mrule	: T_1008  node ':' ncode	{  set_yyloc(yyloc); $$=ast::mrule($2,$4); }
	;
vrule	: T_1009  node ':' ncode	{  set_yyloc(yyloc); $$=ast::vrule($2,$4); }
	;
list	: lelem g_51	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
lelem	: T_1016 	{  set_yyloc(yyloc); $$=ast::cons($1); }
	| T_1019 	{  set_yyloc(yyloc); $$=ast::cons($1); }
	| T_1015 	{  set_yyloc(yyloc); $$=ast::cons($1); }
	| T_1014 	{  set_yyloc(yyloc); $$=ast::cons($1); }
	| '(' list ')'	{  set_yyloc(yyloc); $$=ast::cons(cons("("s,$2),")"s); }
	;
node	: T_1015  '(' g_55 ')'	{  set_yyloc(yyloc); $$=ast::node2($1,$3); }
	| T_1015 	{  set_yyloc(yyloc); $$=ast::node1($1); }
	;
g_1	: { clear_attr(yyval); }
	| decl	{  set_yyloc(yyloc); $$=$1; }
	;
g_3	: g_1 '\n'	{  set_yyloc(yyloc); $$=$1; }
	;
g_2	: { clear_attr(yyval); }
	| g_2 g_3	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_4	: { clear_attr(yyval); }
	| lrule	{  set_yyloc(yyloc); $$=$1; }
	;
g_6	: g_4 '\n'	{  set_yyloc(yyloc); $$=$1; }
	;
g_5	: { clear_attr(yyval); }
	| g_5 g_6	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_7	: { clear_attr(yyval); }
	| T_1013  g_5	{  set_yyloc(yyloc); $$=$2; }
	;
g_9	: grule ';'	{  set_yyloc(yyloc); $$=$1; }
	;
g_8	: { clear_attr(yyval); }
	| g_8 g_9	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_10	: { clear_attr(yyval); }
	| T_1012  g_8	{  set_yyloc(yyloc); $$=$2; }
	;
g_11	: { clear_attr(yyval); }
	| T_1011  xcode	{  set_yyloc(yyloc); $$=$2; }
	;
g_13	: symbol	{  set_yyloc(yyloc); $$=$1; }
	;
g_12	: { clear_attr(yyval); }
	| g_12 g_13	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_14	: T_1015  '(' T_1017  ')'	{  set_yyloc(yyloc); $$=std::string($1+$3); }
	| T_1015 	{  set_yyloc(yyloc); $$=$1; }
	;
g_16	: g_14	{  set_yyloc(yyloc); $$=$1; }
	;
g_15	: g_16	{  set_yyloc(yyloc); $$=ast::cons($1); }
	| g_15 g_16	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_18	: T_1021 	{  set_yyloc(yyloc); $$=$1; }
	;
g_17	: g_18	{  set_yyloc(yyloc); $$=ast::cons($1); }
	| g_17 g_18	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_20	: '<' T_1015  '>' g_17	{  set_yyloc(yyloc); $$=ast::cons($2,$4); }
	;
g_19	: g_20	{  set_yyloc(yyloc); $$=ast::cons($1); }
	| g_19 g_20	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_22	: ',' type1	{  set_yyloc(yyloc); $$=$2; }
	;
g_21	: { clear_attr(yyval); }
	| g_21 g_22	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_23	: { clear_attr(yyval); }
	| type1 g_21	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_25	: ',' T_1015 	{  set_yyloc(yyloc); $$=$2; }
	;
g_24	: { clear_attr(yyval); }
	| g_24 g_25	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_26	: '*'	{  set_yyloc(yyloc); $$=ast::cons("*"s); }
	| T_1015  g_24	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_27	: { clear_attr(yyval); }
	| '<' g_26 '>'	{  set_yyloc(yyloc); $$=$2; }
	;
g_29	: ',' alist	{  set_yyloc(yyloc); $$=$2; }
	;
g_28	: { clear_attr(yyval); }
	| g_28 g_29	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_30	: { clear_attr(yyval); }
	| alist g_28	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_31	: { clear_attr(yyval); }
	| T_1021 	{  set_yyloc(yyloc); $$=$1; }
	;
g_32	: { clear_attr(yyval); }
	| '<' term '>'	{  set_yyloc(yyloc); $$=$2; }
	;
g_34	: '|' xrule	{  set_yyloc(yyloc); $$=$2; }
	;
g_33	: { clear_attr(yyval); }
	| g_33 g_34	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_36	: elem	{  set_yyloc(yyloc); $$=$1; }
	;
g_35	: { clear_attr(yyval); }
	| g_35 g_36	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_37	: xelem	{  set_yyloc(yyloc); $$=$1; }
	| T_1006 	{  set_yyloc(yyloc); $$=ast::lexem("default"s); }
	;
g_39	: g_37	{  set_yyloc(yyloc); $$=$1; }
	;
g_38	: { clear_attr(yyval); }
	| g_38 g_39	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_41	: xelem	{  set_yyloc(yyloc); $$=$1; }
	;
g_40	: { clear_attr(yyval); }
	| g_40 g_41	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_43	: T_1020  { clear_attr(yyval); }
	;
g_42	: { clear_attr(yyval); }
	| g_42 g_43 { clear_attr(yyval); }
	;
g_45	: mrule	{  set_yyloc(yyloc); $$=$1; }
	;
g_44	: g_45	{  set_yyloc(yyloc); $$=ast::cons($1); }
	| g_44 g_45	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_46	: { clear_attr(yyval); }
	| T_1006  ':' ncode	{  set_yyloc(yyloc); $$=ast::mrule(nullptr,$3); }
	;
g_47	: g_44 g_46	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_49	: vrule	{  set_yyloc(yyloc); $$=$1; }
	;
g_48	: g_49	{  set_yyloc(yyloc); $$=ast::cons($1); }
	| g_48 g_49	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_50	: lelem	{  set_yyloc(yyloc); $$=$1; }
	| ','	{  set_yyloc(yyloc); $$=ast::cons(","s); }
	;
g_52	: g_50	{  set_yyloc(yyloc); $$=$1; }
	;
g_51	: { clear_attr(yyval); }
	| g_51 g_52	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_54	: ',' T_1015 	{  set_yyloc(yyloc); $$=$2; }
	;
g_53	: { clear_attr(yyval); }
	| g_53 g_54	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
g_55	: { clear_attr(yyval); }
	| T_1015  g_53	{  set_yyloc(yyloc); $$=ast::cons($1,$2); }
	;
%%
